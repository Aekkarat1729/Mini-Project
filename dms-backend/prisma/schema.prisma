generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  passwordHash String
  email        String?
  role         Role      @default(USER)
  createdAt    DateTime  @default(now())
  documents    Document[]
  auditLogs    AuditLog[]
}

model Document {
  id          Int               @id @default(autoincrement())
  title       String
  type        String
  description String?
  filePath    String?
  isDeleted   Boolean           @default(false)
  createdBy   String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  user        User              @relation(fields: [userId], references: [id])
  userId      Int
  versions    DocumentVersion[]
  tags        DocumentTag[]
  auditLogs   AuditLog[]
}

model DocumentVersion {
  id            Int      @id @default(autoincrement())
  versionNumber String
  filePath      String
  createdAt     DateTime @default(now())
  document      Document @relation(fields: [documentId], references: [id])
  documentId    Int
}

model Tag {
  id   Int           @id @default(autoincrement())
  name String        @unique
  docs DocumentTag[]
}

model DocumentTag {
  document   Document @relation(fields: [documentId], references: [id])
  documentId Int
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      Int
  @@id([documentId, tagId])
}

model AuditLog {
  id          Int      @id @default(autoincrement())
  action      String
  performedBy String
  performedAt DateTime @default(now())
  document    Document @relation(fields: [documentId], references: [id])
  documentId  Int
  user        User?    @relation(fields: [userId], references: [id])
  userId      Int?
}
